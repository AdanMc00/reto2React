{"ast":null,"code":"var _jsxFileName = \"/home/adn/Documentos/bootcamp/reactReto2/react-6ta-gen/src/views/Home.jsx\";\nimport React, { Component } from 'react';\nimport AppLoading from '../components/AppLoading';\nimport PostList from '../components/PostList';\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      posts: [],\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    setInterval(async () => {\n      this.setState({\n        loading: true\n      });\n      const token = window.sessionStorage.getItem('authorization');\n      const response = await window.fetch('http://localhost:8080/posts', {\n        headers: {\n          authorization: token\n        }\n      });\n      const payload = await response.json();\n      const posts = payload.data.posts.map(badPost => ({\n        image: badPost.imageUrl,\n        title: badPost.title,\n        text: badPost.description,\n        readTime: badPost.readingTime\n      }));\n      this.setState({\n        posts,\n        loading: false\n      });\n    }, 2000);\n  }\n\n  render() {\n    if (this.state.loading) return React.createElement(AppLoading, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    });\n    return React.createElement(PostList, {\n      list: this.state.posts,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["/home/adn/Documentos/bootcamp/reactReto2/react-6ta-gen/src/views/Home.jsx"],"names":["React","Component","AppLoading","PostList","Home","constructor","props","state","posts","loading","componentDidMount","setInterval","setState","token","window","sessionStorage","getItem","response","fetch","headers","authorization","payload","json","data","map","badPost","image","imageUrl","title","text","description","readTime","readingTime","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,QAAP,MAAqB,wBAArB;;AAEA,MAAMC,IAAN,SAAmBH,SAAnB,CAA6B;AAC3BI,EAAAA,WAAW,CAAEC,KAAF,EAAS;AAClB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,EADI;AAEXC,MAAAA,OAAO,EAAE;AAFE,KAAb;AAID;;AAEDC,EAAAA,iBAAiB,GAAI;AACnBC,IAAAA,WAAW,CAAC,YAAY;AACtB,WAAKC,QAAL,CAAc;AACZH,QAAAA,OAAO,EAAE;AADG,OAAd;AAIA,YAAMI,KAAK,GAAGC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,CAA8B,eAA9B,CAAd;AAEA,YAAMC,QAAQ,GAAG,MAAMH,MAAM,CAACI,KAAP,CAAa,6BAAb,EAA4C;AACjEC,QAAAA,OAAO,EAAE;AAAEC,UAAAA,aAAa,EAAEP;AAAjB;AADwD,OAA5C,CAAvB;AAIA,YAAMQ,OAAO,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAtB;AAEA,YAAMd,KAAK,GAAGa,OAAO,CAACE,IAAR,CAAaf,KAAb,CAAmBgB,GAAnB,CAAwBC,OAAD,KAAc;AACjDC,QAAAA,KAAK,EAAED,OAAO,CAACE,QADkC;AAEjDC,QAAAA,KAAK,EAAEH,OAAO,CAACG,KAFkC;AAGjDC,QAAAA,IAAI,EAAEJ,OAAO,CAACK,WAHmC;AAIjDC,QAAAA,QAAQ,EAAEN,OAAO,CAACO;AAJ+B,OAAd,CAAvB,CAAd;AAOA,WAAKpB,QAAL,CAAc;AACZJ,QAAAA,KADY;AAEZC,QAAAA,OAAO,EAAE;AAFG,OAAd;AAID,KAxBU,EAwBR,IAxBQ,CAAX;AAyBD;;AAEDwB,EAAAA,MAAM,GAAI;AACR,QAAI,KAAK1B,KAAL,CAAWE,OAAf,EAAwB,OAAO,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAExB,WAAO,oBAAC,QAAD;AAAU,MAAA,IAAI,EAAE,KAAKF,KAAL,CAAWC,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AA1C0B;;AA6C7B,eAAeJ,IAAf","sourcesContent":["import React, { Component } from 'react'\n\nimport AppLoading from '../components/AppLoading'\nimport PostList from '../components/PostList'\n\nclass Home extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      posts: [],\n      loading: true\n    }\n  }\n\n  componentDidMount () {\n    setInterval(async () => {\n      this.setState({\n        loading: true\n      })\n\n      const token = window.sessionStorage.getItem('authorization')\n\n      const response = await window.fetch('http://localhost:8080/posts', {\n        headers: { authorization: token }\n      })\n\n      const payload = await response.json()\n\n      const posts = payload.data.posts.map((badPost) => ({\n        image: badPost.imageUrl,\n        title: badPost.title,\n        text: badPost.description,\n        readTime: badPost.readingTime\n      }))\n\n      this.setState({\n        posts,\n        loading: false\n      })\n    }, 2000)\n  }\n\n  render () {\n    if (this.state.loading) return <AppLoading />\n\n    return <PostList list={this.state.posts} />\n  }\n}\n\nexport default Home\n"]},"metadata":{},"sourceType":"module"}